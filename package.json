{
	"name": "beyond-debug",
	"displayName": "GDB Debugger - Beyond",
	"version": "0.9.16",
	"publisher": "coolchyni",
	"description": "Debugger with gdb for c,c++,freepascal,fortran and more.",
	"author": {
		"name": "coolchyni",
		"email": "coolchyni@gmail.com"
	},
	"license": "MIT",
	"keywords": [
		"beyond",
		"debug",
		"gdb",
		"c++",
		"cpp",
		"pascal",
		"fpc",
		"debugger"
	],
	"engines": {
		"vscode": "^1.89.0"
	},
	"icon": "assets/beyond-debug.png",
	"categories": [
		"Debuggers",
		"Programming Languages"
	],
	"private": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/coolchyni/beyond-debug"
	},
	"scripts": {
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"package": "vsce package",
		"publish": "vsce publish",
		"peg": "pegjs -o ./src/dbgmits/mi_output_parser.js src/dbgmits/mi_output_grammar.pegjs",
		"vscode:prepublish": "npm run -S esbuild-base -- --minify",
		"esbuild-base": "node -e \"require('fs').rmSync('out', {recursive: true, force: true})\" && node build.js",
		"esbuild": "npm run -S esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run -S esbuild-base -- --sourcemap --watch"
	},
	"dependencies": {
		"@modelcontextprotocol/sdk": "^1.17.2",
		"@vscode/debugadapter": "1.57.0",
		"await-notify": "1.0.1",
		"iconv-lite": "0.6.2",
		"pegjs-require-import": "^0.0.6"
	},
	"devDependencies": {
		"@types/bunyan": "0.0.30",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.0",
		"@types/node": "^13.13.52",
		"@types/ssh2": "^1.11.6",
		"@types/vscode": "^1.89.0",
		"@typescript-eslint/eslint-plugin": "^3.8.0",
		"@typescript-eslint/parser": "^3.8.0",
		"esbuild": "^0.25.8",
		"esbuild-native-node-modules-plugin": "^1.0.3",
		"eslint": "^7.6.0",
		"eslint-plugin-react": "^7.30.0",
		"glob": "^7.1.6",
		"mocha": "^8.0.1",
		"pegjs": "^0.10.0",
		"rimraf": "^3.0.2",
		"simplepeg": "1.2.0",
		"ssh2": "^1.11.0",
		"typescript": "^3.8.3",
		"vscode-nls": "5.2.0"
	},
	"main": "./out/extension",
	"activationEvents": [
		"onDebug",
		"onStartupFinished"
	],
	"contributes": {
		"configuration": {
			"title": "Beyond Debug MCP",
			"properties": {
				"beyondDebug.mcp.enabled": {
					"type": "boolean",
					"default": false,
					"description": "Enable MCP server for AI debugging assistance"
				},
				"beyondDebug.mcp.port": {
					"type": "number",
					"default": 0,
					"description": "Port for MCP server (0 for auto-assign)"
				},
				"beyondDebug.mcp.host": {
					"type": "string",
					"default": "localhost",
					"description": "Host for MCP server"
				},
				"beyondDebug.mcp.autoRegister": {
					"type": "boolean",
					"default": false,
					"description": "Automatically register MCP server with VS Code"
				}
			}
		},
		"mcpServerDefinitionProviders": [
			{
				"id": "beyond-debug.mcp-server",
				"label": "Beyond Debug MCP Server"
			}
		],
		"commands": [
			{
				"title": "View Memory",
				"command": "bydebug.ViewMemory",
				"icon": "$(symbol-parameter)",
				"category": "byeond"
			},
			{
				"command": "beyondDebug.mcp.start",
				"title": "Start MCP Server",
				"category": "Beyond Debug"
			},
			{
				"command": "beyondDebug.mcp.stop",
				"title": "Stop MCP Server",
				"category": "Beyond Debug"
			},
			{
				"command": "beyondDebug.mcp.restart",
				"title": "Restart MCP Server",
				"category": "Beyond Debug"
			},
			{
				"command": "beyondDebug.mcp.status",
				"title": "Show MCP Status",
				"category": "Beyond Debug"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "bydebug.ViewMemory",
					"when": "inDebugMode&&debugType==by-gdb"
				}
			]
		},
		"breakpoints": [
			{
				"language": "c"
			},
			{
				"language": "c++"
			},
			{
				"language": "cpp"
			},
			{
				"language": "d"
			},
			{
				"language": "objective-c"
			},
			{
				"language": "fortran"
			},
			{
				"language": "fortran-modern"
			},
			{
				"language": "fortran90"
			},
			{
				"language": "fortran_free-form"
			},
			{
				"language": "fortran_fixed-form"
			},
			{
				"language": "rust"
			},
			{
				"language": "pascal"
			},
			{
				"language": "objectpascal"
			},
			{
				"language": "ada"
			},
			{
				"language": "nim"
			},
			{
				"language": "arm"
			},
			{
				"language": "asm"
			},
			{
				"language": "vala"
			},
			{
				"language": "crystal"
			},
			{
				"language": "kotlin"
			},
			{
				"language": "zig"
			}
		],
		"debuggers": [
			{
				"type": "by-gdb",
				"label": "GDB(Beyond)",
				"program": "./out/debugAdapter.js",
				"runtime": "node",
				"languages": [
					"c",
					"cpp",
					"pascal",
					"objectpascal"
				],
				"configurationAttributes": {
					"launch": {
						"required": [
							"program"
						],
						"properties": {
							"debuggerPath": {
								"type": "string",
								"description": "The path to the debugger (such as gdb).",
								"default": "gdb"
							},
							"debuggerArgs": {
								"type": "array",
								"description": "Additional arguments for the debugger.",
								"items": {
									"type": "string"
								}
							},
							"program": {
								"type": "string",
								"description": "Path to program executable.",
								"default": "${workspaceFolder}/${fileBasenameNoExtension}"
							},
							"programArgs": {
								"type": "string",
								"description": "Command line arguments passed to the program."
							},
							"cwd": {
								"type": "string",
								"description": "The working directory of the target.",
								"default": "${workspaceRoot}"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "If true, the debugger should stop at the entrypoint of the target.",
								"default": false
							},
							"commandsBeforeExec": {
								"type": "array",
								"description": "One or more GDB commands to execute before launch.",
								"items": {
									"type": "string"
								}
							},
							"varUpperCase": {
								"type": "boolean",
								"description": "Convert all variables to uppercase. Used in case insensitive language, e.g. pascal.",
								"default": false
							},
							"defaultStringCharset": {
								"type": "string",
								"description": "Set the charset of a string variable on display.  e.g. utf-8.",
								"default": ""
							},
							"language": {
								"type": "string",
								"enum": [
									"auto",
									"c++",
									"pascal"
								],
								"description": "The development language of for debug. e.g. c++ pascal ...",
								"default": "auto"
							},
							"remote": {
								"required": [
									"enabled",
									"address"
								],
								"properties": {
									"enabled": {
										"type": "boolean",
										"description": "If true, the remote mode will be actived..",
										"default": true
									},
									"address": {
										"type": "string",
										"description": "Remote address and port. [ip:port] ",
										"default": ""
									},
									"mode": {
										"type": "string",
										"description": "Extended target mode.  Can be `remote` or `extended-remote`",
										"default": "remote",
										"enum": [
											"remote",
											"extended-remote"
										]
									},
									"execfile": {
										"type": "string",
										"description": "Remote exec file. Used on extended-remote mode.  Will use local program name if not set."
									},
									"transfer": {
										"type": "array",
										"description": "Transfer local file to remote before launch.",
										"items": {
											"properties": {
												"from": {
													"type": "string"
												},
												"to": {
													"type": "string"
												}
											}
										}
									}
								}
							},
							"ssh": {
								"required": [
									"enabled",
									"address",
									"username"
								],
								"properties": {
									"enabled": {
										"type": "boolean",
										"description": "If true, the ssh mode will be actived..",
										"default": true
									},
									"address": {
										"type": "string",
										"description": "Remote address and port. [ip:port] ",
										"default": ""
									},
									"username": {
										"type": "string",
										"description": "User name for login."
									},
									"passwordType": {
										"type": "string",
										"description": "How to use password.",
										"enum": [
											"none",
											"input",
											"inputAndSave"
										],
										"default": "none"
									},
									"privateKey": {
										"type": "string",
										"description": "File path of privateKey to login.(eg. id_rsa) \n This will be ignored if password is not empty. "
									},
									"timeout": {
										"type": "number",
										"description": "Time out for SSH.(ms)",
										"default": 1000
									},
									"remoteSrcPrefix": {
										"type": "string",
										"description": "Path prefix of remote source code.\n It will be replaced by localSrcPrefix if not empty. "
									},
									"localSrcPrefix": {
										"type": "string",
										"description": "Path prefix of local source code. Default: ${workspaceRoot}"
									},
									"transfer": {
										"type": "array",
										"description": "Transfer local file to remote before launch.",
										"items": {
											"properties": {
												"from": {
													"type": "string"
												},
												"to": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					},
					"attach": {
						"properties": {
							"debuggerPath": {
								"type": "string",
								"description": "The path to the debugger (such as gdb). ",
								"default": "gdb"
							},
							"debuggerArgs": {
								"type": "array",
								"description": "Additional arguments for the debugger.",
								"items": {
									"type": "string"
								}
							},
							"program": {
								"type": "string",
								"description": "Path to program executable.",
								"default": "${workspaceFolder}/${fileBasenameNoExtension}"
							},
							"commandsBeforeExec": {
								"type": "array",
								"description": "One or more GDB commands to execute before launch.",
								"items": {
									"type": "string"
								}
							},
							"varUpperCase": {
								"type": "boolean",
								"description": "Convert all variables to uppercase. Used in case insensitive language, e.g. pascal.",
								"default": false
							},
							"defaultStringCharset": {
								"type": "string",
								"description": "Set the charset of a string variable on display. e.g. utf-8.",
								"default": ""
							},
							"cwd": {
								"type": "string",
								"description": "The working directory of the target in local.",
								"default": "${workspaceRoot}"
							},
							"processId": {
								"anyOf": [
									{
										"type": "integer",
										"description": "The process id to attach to. ",
										"default": 0
									}
								]
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"type": "by-gdb",
						"request": "launch",
						"name": "Launch(gdb)",
						"program": "${fileBasenameNoExtension}",
						"cwd": "${workspaceRoot}"
					}
				],
				"configurationSnippets": [
					{
						"label": "GDB(Beyond): Launch a program",
						"description": "A new configuration for 'debugging'.",
						"body": {
							"type": "by-gdb",
							"request": "launch",
							"name": "Launch(gdb)",
							"program": "^\"\\${fileBasenameNoExtension}\"",
							"cwd": "^\"\\${workspaceRoot}\""
						}
					},
					{
						"label": "GDB(Beyond): Attach to process",
						"description": "A new configuration for 'debugging' to attach to process.",
						"body": {
							"type": "by-gdb",
							"request": "attach",
							"name": "Attach(gdb)",
							"program": "^\"\\${fileBasenameNoExtension}\"",
							"cwd": "^\"\\${workspaceRoot}\"",
							"processId": 1234
						}
					},
					{
						"label": "GDB(Beyond): Connect to gdbserver",
						"description": "A new configuration for 'debugging' use gdbserver.",
						"body": {
							"type": "by-gdb",
							"request": "launch",
							"name": "Launch(remote)",
							"program": "^\"\\${fileBasenameNoExtension}\"",
							"cwd": "^\"\\${workspaceRoot}\"",
							"remote": {
								"enabled": true,
								"address": ":2345",
								"mode": "remote",
								"execfile": "^\"\\${fileBasenameNoExtension}\""
							}
						}
					},
					{
						"label": "GDB(Beyond): Through SSH",
						"description": "A new configuration for 'debugging' through ssh.",
						"body": {
							"type": "by-gdb",
							"request": "launch",
							"name": "Launch(SSH)",
							"program": "Input program path on remote.",
							"cwd": "Input remote directory",
							"ssh": {
								"enabled": true,
								"username": "root",
								"address": "ip:port",
								"passwordType": "none"
							}
						}
					}
				]
			}
		]
	}
}
